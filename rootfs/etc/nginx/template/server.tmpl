{{ range $ut := .Annotations.loadBalance.LbConfig }}

## start {{ $ut.Host }}
upstream {{ $ut.Upstream }} {
    {{ if ne .Annotations.loadBalance.LbPolicy "" }}
    {{ .Annotations.loadBalance.LbPolicy }};
    {{ end }}
    {{ range $backend := $ut.Services }}
    server {{ $backend.Name }};
    {{ end }}
}


server {
    listen       80;
    listen  [::]:80;
    listen       443 ssl;
    listen  [::]:443 ssl;
    server_name {{ $ut.Host }};

    #### backend
    {{ range $path := $ut.Services }}
	{{ if .Annotations.Rewrite.EnableRegex }}
    location ~ ^{{ $ut.Path }} {
	{{ else if eq $ut.PathType "Exact" }}
	location = {{ $ut.Path }} {
	{{  else }}
	location {{ $ut.Path }} {
	{{ end }}
        {{ if ne .Annotations.Rewrite.RewriteTarget  "" }}
        rewrite ^{{ $ut.Path }} {{ .Annotations.Rewrite.RewriteTarget }} {{ .Annotations.Rewrite.RewriteFlag }};
        {{ end }}

        set $best_http_host      $http_host;
        set $pass_server_port    $server_port;
        set $pass_port           $pass_server_port;
        set $pass_access_scheme  $scheme;

        # Allow websocket connections
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";


        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-For        $remote_addr;
        proxy_set_header X-Forwarded-Host       $best_http_host;
        proxy_set_header X-Forwarded-Port       $pass_port;
        proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
        proxy_set_header X-Forwarded-Scheme     $pass_access_scheme;
        proxy_set_header X-Scheme               $pass_access_scheme;
        # Pass the original X-Forwarded-For
        proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;

        # Custom headers to proxied server

        proxy_connect_timeout                   5s;
        proxy_send_timeout                      60s;
        proxy_read_timeout                      60s;

        proxy_buffering                         off;
        proxy_buffer_size                       4k;
        proxy_buffers                           4 4k;

        proxy_max_temp_file_size                1024m;

        proxy_request_buffering                 on;
        proxy_http_version                      1.1;

        proxy_cookie_domain                     off;
        proxy_cookie_path                       off;

        # In case of errors try the next upstream server before returning an error
        proxy_next_upstream                     error timeout;
        proxy_next_upstream_timeout             0;
        proxy_next_upstream_tries               3;
		
		# proxy backend
        proxy_pass http://{{ $ut.Upstream }};
      
        proxy_redirect                         off;
    }
	{{ end }}
}
## end {{ .Server.HostName }}
{{ end }}