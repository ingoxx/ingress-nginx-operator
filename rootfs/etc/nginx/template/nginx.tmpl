worker_processes  4;
#error_log  /var/log/nginx/error.log notice;
daemon off;
pid        /var/run/nginx.pid;
worker_rlimit_nofile 1047552;
worker_shutdown_timeout 240s ;

events {
        multi_accept        on;
        worker_connections  16384;
        use                 epoll;
}

{{ $annotations := .Annotations }}
{{ $df := .DefaultBackend }}

### stream
{{ if $annotations.EnableStream.EnableStream }}
stream {
{{ range $bk := $annotations.EnableStream.StreamBackendList }}
    server {
        listen {{ $bk.Port }};
        proxy_pass {{ $bk.StreamBackendName }};
    }
{{ end }}
}
{{ end }}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    proxy_headers_hash_max_size     2048;
    proxy_headers_hash_bucket_size  128;
    ### limit_req_zone
    {{ if $annotations.EnableReqLimit.EnableRequestLimit }}
    {{ range $reqsZone  := $annotations.EnableReqLimit.Bs.Backends }}
    {{ range $lmZone := $reqsZone.LimitZone }}
    limit_req_zone {{ $lmZone.LimitKey }} zone={{ $lmZone.ZoneName }}:{{ $lmZone.Capacity }} rate={{ $lmZone.Rate }};
    {{ end }}
    {{ end }}
    {{ end }}
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;
    error_log  /var/log/nginx/error.log notice;
    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    # gzip  on;

    ### default backend
    {{ if and (ne .DefaultBackendAd "") ( gt $df.Number 0 ) }}
    server {
        listen {{ .DefaultPort }};
        server_name _;  # 匹配所有未被其他 server_name 命中的请求

        location / {
            set $best_http_host      $http_host;
            set $pass_server_port    $server_port;
            set $pass_port           $pass_server_port;
            set $pass_access_scheme  $scheme;

            # Allow websocket connections
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";


            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-For        $remote_addr;
            proxy_set_header X-Forwarded-Host       $best_http_host;
            proxy_set_header X-Forwarded-Port       $pass_port;
            proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
            proxy_set_header X-Forwarded-Scheme     $pass_access_scheme;
            proxy_set_header X-Scheme               $pass_access_scheme;
            # Pass the original X-Forwarded-For
            proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;

            # Custom headers to proxied server

            proxy_connect_timeout                   5s;
            proxy_send_timeout                      60s;
            proxy_read_timeout                      60s;

            proxy_buffering                         off;
            proxy_buffer_size                       4k;
            proxy_buffers                           4 4k;

            proxy_max_temp_file_size                1024m;

            proxy_request_buffering                 on;
            proxy_http_version                      1.1;

            proxy_cookie_domain                     off;
            proxy_cookie_path                       off;

            # In case of errors try the next upstream server before returning an error
            proxy_next_upstream                     error timeout;
            proxy_next_upstream_timeout             0;
            proxy_next_upstream_tries               3;

            ### proxy backend
            proxy_pass http://{{ .DefaultBackendAd }};

            proxy_redirect                         off;
        }
    }
    {{ end }}

    include /etc/nginx/conf.d/*.conf;
}

